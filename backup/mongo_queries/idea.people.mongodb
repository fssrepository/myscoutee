use('myscoutee_db');

var offset = [
    0 * 1000,
    0,
    0,
    0.0 * 118.17399722415202,
    "2021-05-07T17:23:17.258Z"
];

var params = [
    new BinData(3,"P0gwLtku3y0Sx313nA+vgg=="),
    "w"
];

db.profiles.aggregate([
    {
        $geoNear :
        {
            near :
            {
                type: 'Point',
                coordinates: [47.58833453204302, 19.048189743603967]
            },
            spherical     : true,
            minDistance   : offset[0],
            distanceField : 'distance',
            distanceMultiplier: 0.001,
            query         : {'_id': { $nin: [params[0]] }, 'gender': params[1]}
        }
    },
    {
        $lookup:
        {
            from: "likes",
            let: { p_id: "$_id" },
            pipeline: [
                {
                    $match: {
                        $expr: 
                        {
                            $or: [
                                {
                                    $and: [
                                        { $eq: ['$from.$id', '$$p_id'] },
                                        { $eq: ['$to.$id', params[0] ] },
                                    ]
                                },
                                {
                                    $and: [
                                        { $eq: ['$to.$id', '$$p_id'] },
                                        { $eq: ['$from.$id', params[0] ] },
                                    ]
                                }
                            ]
                        },
                    }
                },
                {
                    $project: {
                        "distance": {
                            $avg: "$distance"
                        },
                        "type": {
                            $avg: {
                                $switch: {
                                    branches: [
                                        { 
                                            case: { 
                                                $and: [
                                                    { $eq: ['$to.$id', params[0] ] },
                                                    { $eq: ['$double', false] },
                                                ]
                                            },
                                            then: 2
                                        },
                                        { 
                                            case: { 
                                                $and: [
                                                    { $eq: ['$from.$id', params[0] ] },
                                                    { $eq: ['$double', false] },
                                                ]
                                            },
                                            then: 1
                                        }
                                    ],
                                    default: 0
                                }
                            }
                        },
                        "createdDate": {
                            $max: "$createdDate"
                        },
                        data: "$$ROOT"
                    }
                },
            ],
            as: "likes",
        }
    },
    {
        $unwind: { path: "$likes", preserveNullAndEmptyArrays: true }
    },
    {
        $match: {
            $expr: 
            {
                $and: [
                    {$eq: [ "$status", "A" ] },
                    {$gte: [{$ifNull: [ "$likes.distance", 0]}, offset[1]] },
                ]
            },
        }
    },
    {
        $group: {
            "_id": "$_id",
            "likes": {
                $avg: "$likes.distance"
            },
            "type": {
                $avg: "$likes.type"
            },
            "rate": {
                $avg: {
                    $switch: {
                        branches: [
                            { 
                                case: { 
                                    $eq: ['$likes.type', 1 ] 
                                },
                                then: "$likes.data.rate"
                            }
                        ],
                        default: 0
                    }
                }
            },
            "groupKey": {
                $first : {$multiply: [{$floor : [{$divide : ["$distance", 5]}]}, 5]}
            },
            "distance": {
                $first : "$distance"
            }
        }
    },
    {
        $lookup:
        {
            from: "events",
            let: { "p_id": "$_id" },
            pipeline: [
                {
                    $match: {
                        $expr: {
                            $and: [
                                {$in: ["$$p_id","$members.profile.$id"]},
                                {$not: {$in: [params[0], "$members.profile.$id"]}},
                                {$gt: [{$ifNull: [ "$createdDate", ISODate()]}, { $toDate: offset[4] }]}
                            ]
                        }
                    }
                },
            ],
            as: "events",
        }
    },
    {
        $unwind: { path: "$events" }
    },
    {
        $unwind: { path: "$events.members" }
    },
    {
        $group: {
            "_id": "$events.members.profile.$id",
            "rate": {
                $avg: "$events.rate"
            },
            "groupKey": {
                $min: "$groupKey"
            },
            "likes": {
                $avg: "$likes"
            },
            "distance": {
                $min: "$distance"
            },
            data: { "$first": "$events.members.profile" },
        }
    },
    {
        $match: {
            $expr: {
                $and: [
                    {$gte: [{$ifNull: [ "$rate", 0]}, offset[2] ]},
                    {$gt: ["$distance", offset[3]] },
                ]
            }
        }
    },
    {
        $sort: {
            "groupKey": 1, "likes": -1, "rate": -1, "distance": 1
        }
    },
    { $limit : 20 },
    {
        $replaceRoot: { 
            "newRoot": { 
                $mergeObjects: [{"member": "$data"}, { rate: "$rate", groupKey: "$groupKey", offset: ["$groupKey", {$ifNull: [ "$likes", 0]}, "$rate", "$distance", ISODate()] } ]
            }
        }
    }
])