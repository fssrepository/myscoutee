{"version":3,"sources":["./src/app/business/components/panel/panel.component.ts","./src/app/business/components/panel/panel.component.html","./src/app/business/components/forms/setting/setting.component.ts","./src/app/business/components/forms/setting/setting.component.html","./src/app/business/components/forms/profile/profile.component.ts","./src/app/business/components/forms/profile/profile.component.html","./src/app/business/components/index.ts","./src/app/business/components/forms/campaign/campaign.component.ts","./src/app/business/components/forms/campaign/campaign.component.html","./src/app/business/business.module.ts","./src/app/business/components/forms/feedback/feedback.component.ts","./src/app/business/components/forms/feedback/feedback.component.html","./src/app/business/components/basket/basket.component.ts","./src/app/business/components/basket/basket.component.html","./src/app/business/components/qrcode/qrcode.component.ts","./src/app/business/components/qrcode/qrcode.component.html","./src/app/business/components/forms/group-filter/group-filter.component.ts","./src/app/business/components/forms/group-filter/group-filter.component.html","./src/app/business/components/forms/event-filter/event-filter.component.ts","./src/app/business/components/forms/event-filter/event-filter.component.html","./src/app/business/components/forms/event/event.component.ts","./src/app/business/components/forms/event/event.component.html","./src/app/business/components/editor/editor.component.ts","./src/app/business/components/editor/editor.component.html","./src/app/business/components/help/help.component.ts","./src/app/business/components/help/help.component.html","./src/app/business/components/forms/index.ts","./src/app/business/business-routing.module.ts","./src/app/business/components/forms/car/car.component.ts","./src/app/business/components/forms/car/car.component.html","./src/app/business/components/forms/profile-status/profile-status.component.ts","./src/app/business/components/forms/profile-status/profile-status.component.html","./src/app/business/components/event/event.component.ts","./src/app/business/components/event/event.component.html","./src/app/business/components/reward/reward.component.ts","./src/app/business/components/reward/reward.component.html","./src/app/business/components/forms/group/group.component.ts","./src/app/business/components/forms/group/group.component.html"],"names":[],"mappings":"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","file":"business-business-module-es2015.js","sourcesContent":["import { HttpParams } from '@angular/common/http';\nimport {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injector,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\nimport { MsPanel } from 'src/lib';\nimport { DataService } from '../../../services/data.service';\nimport { TransformService } from '../../../services/transform.service';\n\nconst injector = Injector.create({\n  providers: [{ provide: MsPanel, deps: [] }],\n});\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n})\nexport class PanelComponent implements OnInit, OnDestroy {\n  @ViewChild('panel', { static: true, read: ViewContainerRef })\n  panelRef: ViewContainerRef;\n\n  private sub: Subscription;\n\n  actions: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n\n  value: any;\n\n  private url: any;\n  private itemUrl: any;\n\n  private comp: ComponentRef<MsPanel>;\n\n  constructor(\n    private cfr: ComponentFactoryResolver,\n    private activatedRoute: ActivatedRoute,\n    public dialog: MatDialog,\n    public dataService: DataService,\n    private httpService: HttpService,\n    public transformService: TransformService\n  ) {\n    let url = this.activatedRoute['_routerState'].snapshot.url;\n    this.itemUrl = url;\n\n    url = url.substring(1);\n    this.url = url.substring(url.indexOf('/'));\n\n    this.progress.mode = 'indeterminate';\n\n    this.httpService.get(this.url).subscribe({\n      next: (value) => {\n        this.value = value;\n\n        const componentFactory = this.cfr.resolveComponentFactory(MsPanel);\n        const component = componentFactory.create(injector);\n\n        let msg;\n        if (this.value['profile'].status !== 'P') {\n          msg = this.transformService.transform(value, this.itemUrl);\n        }\n\n        component.instance.onEnter('', msg);\n\n        component.instance.show(true, true);\n        this.panelRef.insert(component.hostView);\n        this.comp = component;\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        this.progress.mode = 'determine';\n      },\n    });\n  }\n\n  doAction(idx) {\n    switch (this.actions[idx].type) {\n      case 'share':\n        const params = new HttpParams();\n\n        this.httpService.get(this.url + '/share', params).subscribe({\n          next: (result) => {\n            if (navigator.share) {\n              navigator\n                .share({\n                  title: result['info'].title,\n                  text: result['info'].msg,\n                  url: location.origin + '?xlink=' + result['link'].key,\n                })\n                .then(() => {\n                  console.log('Thanks for sharing!');\n                })\n                .catch(console.error);\n            } else {\n              console.log({\n                title: result['info'].title,\n                text: result['info'].msg,\n                url: location.origin + '?xlink=' + result['link'].key,\n              });\n              alert('Not implemented for desktop!');\n            }\n          },\n          error: (error) => {\n            this.progress.mode = 'determine';\n            this.progress.color = 'warn';\n          },\n          complete: () => {\n            console.log('complete');\n          },\n        });\n        break;\n      default:\n        this.openDialog(idx);\n    }\n  }\n\n  openDialog(idx) {\n    const dialogRef = this.dialog.open(this.actions[idx].component, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: '100%',\n      width: '100%',\n      data: { value: this.value, url: this.url },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      switch (this.actions[idx].type) {\n        case 'filter':\n          break;\n        case 'add':\n          break;\n        case 'attach':\n          break;\n        case 'logout':\n          break;\n        case 'edit':\n          if (result !== undefined) {\n            this.value = result;\n            this.comp.instance.onEnter(\n              '',\n              this.transformService.transform(result, this.itemUrl, false, true)\n            );\n            this.panelRef.insert(this.comp.hostView);\n          }\n          break;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.sub = this.activatedRoute.data.subscribe((v) => {\n      this.actions = v.actions;\n    });\n  }\n}\n","<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div class=\"big_panel\">\n  <ng-container #panel> </ng-container>\n</div>\n<div class=\"mat-fab-container\">\n  <button\n    *ngFor=\"let action of actions; let idx = index\"\n    mat-mini-fab\n    [color]=\"action.color ? action.color : 'primary'\"\n    (click)=\"doAction(idx)\"\n  >\n    <mat-icon>{{ action.icon }}</mat-icon>\n  </button>\n</div>\n","import { HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport firebase from 'firebase/app';\nimport { NavigationService } from 'src/app/navigation.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { environment } from 'src/environments/environment';\nimport { MsDialog } from 'src/lib';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './setting.component.html',\n})\nexport class SettingComponent implements OnInit {\n  progress: any = { mode: 'determine', value: 0, color: 'primary' };\n\n  url: any;\n\n  formGroup: FormGroup;\n\n  groups: any = [];\n\n  selected;\n\n  current;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<SettingComponent>,\n    public dialog: MatDialog,\n    private httpService: HttpService,\n    private navService: NavigationService\n  ) {\n    this.url = '/user';\n  }\n\n  ngOnInit(): void {\n    const params = new HttpParams();\n\n    this.httpService.get(this.url, params).subscribe({\n      next: (data) => {\n        this.init(data);\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        console.log('complete');\n      },\n    });\n  }\n\n  onSelect(evt) {\n    const idx = this.groups.findIndex((group) => group.value === evt.value);\n    this.selected = this.groups[idx];\n  }\n\n  init(data) {\n    this.current = data['user'].group;\n\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        key: [data['user'].group, Validators.required],\n      }),\n    });\n\n    const groups = [];\n    for (const item of data['groups']) {\n      groups.push({\n        value: item.group.key,\n        viewValue: item.group.name,\n        system: item.group.system,\n      });\n    }\n    this.groups = groups;\n\n    this.onSelect({ value: data['user'].group });\n  }\n\n  leave() {\n    this.openConfirmation(\n      'Would you like to leave the ' + this.selected.viewValue + ' group!'\n    );\n  }\n\n  openConfirmation(msg) {\n    const dialogRef = this.dialog.open(MsDialog, {\n      data: {\n        msg,\n        btn: 'Yes',\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === true) {\n        const params = new HttpParams();\n\n        this.httpService\n          .save(this.url + '/groups/' + this.selected.value + '/leave', params)\n          .subscribe({\n            next: (data) => {\n              this.init(data);\n            },\n            error: (error) => {\n              this.progress.mode = 'determine';\n              this.progress.color = 'warn';\n            },\n            complete: () => {\n              console.log('complete');\n            },\n          });\n      }\n    });\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      const raw = this.formGroup.getRawValue();\n\n      const formData = new FormData();\n\n      const groupForm = new Blob([JSON.stringify(raw.data)], {\n        type: 'application/json',\n      });\n      formData.append('group', groupForm);\n\n      this.httpService.save(this.url, formData).subscribe({\n        next: (value) => {\n          const group = value['user'].group;\n          const groups = value['groups'];\n\n          let groupType;\n          for (const item of groups) {\n            if (item.group.key === group) {\n              groupType = environment.groupTypes[item.group.type];\n              this.navService.groupName = item.group.name[0];\n              break;\n            }\n          }\n\n          const notif = {};\n          for (const like of value['likes']) {\n            notif[groupType + '/' + like.root] = like.value;\n          }\n          this.navService.notif = notif;\n\n          if (\n            value['user'].profile === undefined ||\n            value['user'].profile.status === 'I'\n          ) {\n            this.router.navigate([groupType + '/user']);\n          } else {\n            this.router.navigate([groupType]);\n          }\n\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    // stale value !!!\n    this.dialogRef.close();\n  }\n\n  logout(): void {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        console.log('logout');\n        this.navService.reset.next();\n        this.back();\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>&nbsp;\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<form default *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n  <div formGroupName=\"data\">\n    <fieldset>\n      <legend>Group</legend>\n      <mat-form-field>\n        <mat-select [formControlName]=\"'key'\" (selectionChange)=\"onSelect($event)\">\n          <mat-option *ngFor=\"let group of groups\" [value]=\"group.value\">\n            {{ group.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <button *ngIf=\"!selected.system\" mat-raised-button color=\"warn\" (click)=\"leave()\">\n        Leave\n      </button>\n      <button *ngIf=\"selected.value !== current\" mat-raised-button color=\"primary\" (click)=\"onClick()\">\n        Switch\n      </button>\n    </fieldset>\n    <div button-row>\n      <button mat-raised-button color=\"accent\" (click)=\"logout()\">\n        Logout\n      </button>\n    </div>\n  </div>\n</form>\n","import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpService } from 'src/app/services/http.service';\nimport { DataService } from 'src/app/services/data.service';\nimport { NavigationService } from 'src/app/navigation.service';\nimport { EditorComponent } from '../../editor/editor.component';\n\nconst AUDIO_LENGTH = 10000;\n\nconst DESC_MIN = 10;\nconst DESC_MAX = 160;\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n  formGroup: FormGroup;\n\n  professions: any;\n  physiques: any;\n  religions: any;\n  languages: any;\n  statuses: any;\n\n  images: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n\n  private url: any;\n\n  private pos: any;\n\n  isPlay = false;\n  isRecord = false;\n  voiceData;\n  interval;\n\n  recordPos = 0;\n  playPos = 0;\n  playLimit = AUDIO_LENGTH;\n\n  voiceUrl: any;\n\n  @ViewChild('voiceObj', { static: true }) voiceObj: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<ProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private navService: NavigationService,\n    private httpService: HttpService,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.professions = this.dataService.professions;\n    this.physiques = this.dataService.physiques;\n    this.religions = this.dataService.religions;\n    this.languages = this.dataService.languages;\n    this.statuses = this.dataService.statuses;\n\n    this.data = data.value['profile'];\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    const urlValidator = Validators.pattern(\n      '^https?://(www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@,!:%_+.~#?&//=]*)$'\n    );\n\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        firstName: [this.data.firstName, Validators.required],\n        website: [this.data.website, [urlValidator]],\n        desc: [\n          this.data.desc !== undefined ? this.data.desc : '',\n          [\n            Validators.required,\n            Validators.minLength(DESC_MIN),\n            Validators.maxLength(DESC_MAX),\n          ],\n        ],\n        languages: [[...this.data.languages]],\n        status: [this.data.status !== undefined ? this.data.status : 'I'],\n      }),\n      images: [\n        [...this.data.images],\n        [Validators.required, Validators.minLength(3)],\n      ],\n      voice: [this.data.voice],\n    });\n\n    this.images = (this.data.images as Array<string>).map(\n      (image) =>\n        location.origin + '/backend' + this.url + '/images/' + image['name']\n    );\n\n    this.voiceUrl =\n      location.origin + '/backend' + this.url + '/voice/' + this.data.voice;\n  }\n\n  onHeight(evt): void {\n    this.data.height = evt.value;\n  }\n\n  numSequence(n: number): Array<number> {\n    return Array(n);\n  }\n\n  noCache(img) {\n    return img + '?' + Date.now();\n  }\n\n  openDialog(idx) {\n    const dialogRef = this.dialog.open(EditorComponent, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: '100%',\n      width: '100%',\n      data: {\n        idx,\n        src:\n          this.images[idx] !== undefined\n            ? this.images[idx].split('?')[0] + '_orig'\n            : this.images[idx],\n        value: this.formGroup.controls['images'].value[idx],\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        const images = this.formGroup.controls['images'].value;\n        images[result.idx] = { name: result.id, mtx: result.mtx };\n        this.formGroup.controls['images'].setValue(images);\n        this.data.images[result.idx] = images[result.idx];\n\n        this.images = (this.data.images as Array<string>).map(\n          (image) =>\n            location.origin +\n            '/backend' +\n            this.url +\n            '/images/' +\n            image['name'] +\n            '?' +\n            Date.now()\n        );\n      }\n    });\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      let raw = this.formGroup.getRawValue();\n      raw.data.position = this.navService.pos;\n      raw.data.images = raw.images;\n\n      const formData = new FormData();\n\n      const profile = new Blob([JSON.stringify(raw.data)], {\n        type: 'application/json',\n      });\n      formData.append('profile', profile);\n\n      if (this.voiceData !== undefined) {\n        formData.append('voice', this.voiceData);\n      }\n\n      this.httpService.save(this.url, formData).subscribe({\n        next: (value) => {\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    // stale value !!!\n    this.dialogRef.close();\n  }\n\n  record(): void {\n    if (this.isRecord) {\n      return;\n    }\n    // check/request permission on android\n    navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then((stream) => {\n        const chunks = [];\n        /*var options = {\n              audioBitsPerSecond : 128000,\n              videoBitsPerSecond : 2500000,\n              mimeType : 'video/mp4'\n              }*/\n        const recorder = new MediaRecorder(stream /*,options*/);\n\n        recorder.ondataavailable = (e) => {\n          chunks.push(e.data);\n\n          if (recorder.state === 'inactive') {\n            // ;codecs=h264 can be used to be able to play on ios\n            const blob = new Blob(chunks, { type: 'audio/webm' });\n            this.voiceData = blob;\n            this.voiceUrl = this.domSanitizer.bypassSecurityTrustUrl(\n              URL.createObjectURL(blob)\n            );\n          }\n        };\n\n        recorder.start();\n        this.isRecord = true;\n\n        this.interval = setInterval(() => {\n          this.recordPos++;\n        }, 500);\n\n        setTimeout(() => {\n          setTimeout(() => {\n            this.recordPos = 0;\n            this.isRecord = false;\n          }, 500);\n\n          clearInterval(this.interval);\n          recorder.stop();\n        }, AUDIO_LENGTH);\n      })\n      .catch(console.error);\n  }\n\n  play(): void {\n    if (this.voiceObj === undefined || this.isPlay) {\n      return;\n    }\n\n    this.isPlay = true;\n\n    this.voiceObj.nativeElement['load']();\n\n    const method = this.isPlay ? 'play' : 'pause';\n    this.voiceObj.nativeElement[method]();\n  }\n\n  updateTime(evt): void {\n    this.playPos = this.voiceObj.nativeElement.currentTime * 1000;\n  }\n\n  ended(evt): void {\n    this.isPlay = false;\n    this.playPos = 0;\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Personal data</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-label>Status</mat-label>\n          <mat-select [formControlName]=\"'status'\">\n            <mat-option *ngFor=\"let status of statuses\" [value]=\"status.value\">\n              {{ status.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Enter the name of your business</mat-label>\n          <input matInput [formControlName]=\"'firstName'\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('firstName').invalid\"\n            >Name of business is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Enter Website Url</mat-label>\n          <input matInput [formControlName]=\"'website'\" type=\"url\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('website').invalid\"\n            >Website url is required!</mat-error\n          >\n        </mat-form-field>\n        <fieldset>\n          <legend>Description (min. 10, max. 160)</legend>\n          <div legend-right>\n            {{ formGroup.controls.data.get('desc').value.length }}\n          </div>\n          <mat-form-field>\n            <textarea\n              matInput\n              [formControlName]=\"'desc'\"\n              rows=\"5\"\n              maxlength=\"160\"\n            ></textarea>\n            <mat-error *ngIf=\"formGroup.controls.data.get('desc').invalid\"\n              >Description is required!</mat-error\n            >\n          </mat-form-field>\n        </fieldset>\n        <mat-form-field>\n          <mat-label>Languages</mat-label>\n          <mat-select [formControlName]=\"'languages'\" multiple>\n            <mat-option\n              *ngFor=\"let language of languages\"\n              [value]=\"language.value\"\n              >{{ language.viewValue }}</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.images.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Images</mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <mat-card\n          matRipple\n          default\n          *ngFor=\"let n of numSequence(3); let i = index\"\n          (click)=\"openDialog(i)\"\n        >\n          <img *ngIf=\"images.length > i\" mat-card-image [src]=\"images[i]\" />\n        </mat-card>\n      </mat-expansion-panel>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.voice.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Voice</mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <fieldset class=\"voice\">\n          <legend>Voice</legend>\n          <div\n            mat-button\n            matRipple\n            (click)=\"record()\"\n            style=\"margin-left: auto; border-radius: 50%\"\n          >\n            <svg\n              [style]=\"\n                '--pos:' + recordPos + ';--buff:0;--limit: 10;width:30px;'\n              \"\n              class=\"chart\"\n              viewBox=\"0 0 24 24\"\n            >\n              <g transform=\"rotate(-90 12 12)\">\n                <circle class=\"pos\" r=\"10\" cy=\"12\" cx=\"12\" />\n                <circle class=\"buff\" r=\"10\" cy=\"12\" cx=\"12\" />\n              </g>\n            </svg>\n            <mat-icon\n              mat-rate\n              [ngStyle]=\"{ color: !isPlay ? 'black' : 'gray' }\"\n              >{{ isRecord ? 'stop' : 'mic' }}</mat-icon\n            >\n          </div>\n          <div\n            mat-button\n            matRipple\n            (click)=\"play()\"\n            style=\"margin-right: auto; border-radius: 50%\"\n          >\n            <svg\n              [style]=\"\n                '--pos:' +\n                playPos +\n                ';--buff:0;--limit:' +\n                playLimit +\n                ';width:30px;'\n              \"\n              class=\"chart\"\n              viewBox=\"0 0 24 24\"\n            >\n              <g transform=\"rotate(-90 12 12)\">\n                <circle class=\"pos\" r=\"10\" cy=\"12\" cx=\"12\" />\n                <circle class=\"buff\" r=\"10\" cy=\"12\" cx=\"12\" />\n              </g>\n            </svg>\n            <mat-icon\n              mat-rate\n              [ngStyle]=\"{ color: !isRecord ? 'black' : 'gray' }\"\n              >{{ isPlay ? 'stop' : 'play_arrow' }}</mat-icon\n            >\n          </div>\n          <audio\n            #voiceObj\n            preload=\"none\"\n            (timeupdate)=\"updateTime($event)\"\n            (ended)=\"ended($event)\"\n          >\n            <source [src]=\"voiceUrl\" type=\"audio/ogg\" />\n          </audio>\n        </fieldset>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n","export * from './basket/basket.component';\nexport * from './editor/editor.component';\nexport * from './event/event.component';\nexport * from './panel/panel.component';\nexport * from './qrcode/qrcode.component';\nexport * from './reward/reward.component';\nexport * from './help/help.component';\nexport * from './forms';\n","import {\n  AfterViewInit,\n  Component,\n  ComponentFactoryResolver,\n  Inject,\n  Injector,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { DataService } from 'src/app/services/data.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { TransformService } from 'src/app/services/transform.service';\nimport { MsPanel } from 'src/lib';\nimport { BasketComponent } from '../../basket/basket.component';\nimport { EventFormComponent } from '../event/event.component';\nexport interface Option {\n  value: string;\n  viewValue: string;\n}\n\nconst templateTypes = [\n  { value: 'e', viewValue: 'Event' },\n  { value: 'i', viewValue: 'Idea' },\n  { value: 'j', viewValue: 'Job' },\n];\n\nconst injector = Injector.create({\n  providers: [{ provide: MsPanel, deps: [] }],\n});\n\n@Component({\n  selector: 'app-campaign',\n  templateUrl: './campaign.component.html',\n})\nexport class CampaignFormComponent implements OnInit, AfterViewInit {\n  @ViewChild('templatePanel', { static: true, read: ViewContainerRef })\n  templatePanelRef: ViewContainerRef;\n\n  @ViewChild('groupPanel', { static: true, read: ViewContainerRef })\n  groupPanelRef: ViewContainerRef;\n\n  formGroup: FormGroup;\n\n  images: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  types: any;\n  groupTypes: any;\n\n  title: any = 'Promotion';\n\n  slotsNum = 0;\n\n  constructor(\n    private cfr: ComponentFactoryResolver,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<CampaignFormComponent>,\n    public dialog: MatDialog,\n    private httpService: HttpService,\n    private dataService: DataService,\n    public transformService: TransformService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.data = data.value ? data.value : { slots: [] };\n    this.url = data.url;\n\n    this.types = templateTypes;\n\n    const groupTypes = JSON.parse(JSON.stringify(this.dataService.groupTypes));\n    groupTypes.push({ value: 'g', viewValue: 'Group' });\n    this.groupTypes = groupTypes;\n  }\n\n  onGroupType(event) {\n    if (event.value === 'g') {\n      this.updatePanel(this.groupPanelRef, { type: 'evt' });\n    } else {\n      this.groupPanelRef.clear();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      if (this.data.item) {\n        const msg = this.transformService.transform({ event: this.data.item });\n        this.updatePanel(this.templatePanelRef, msg);\n      }\n\n      if (this.data.group) {\n        const msg = this.transformService.transform({ event: this.data.group });\n        this.updatePanel(this.groupPanelRef, msg);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const offset = new Date().getTimezoneOffset() * 60000;\n    const dateFrom = new Date(Date.now() - offset);\n    const isoDateFrom = dateFrom.toISOString().substring(0, 16);\n    dateFrom.setMinutes(dateFrom.getMinutes() + 1);\n    const isoDateTo = dateFrom.toISOString().substring(0, 16);\n\n    const formGroup = this.fb.group({\n      data: this.fb.group({\n        name: [this.data.name, Validators.required],\n        // load own groups and save the choosen one to refId\n        count: [this.data.count ? this.data.count : 0, Validators.required],\n        type: [this.data.type /*, Validators.required*/],\n        item: [this.data.item /*, Validators.required*/],\n        groupType: [this.data.groupType, Validators.required],\n        group: [this.data.group /*,Validators.required*/],\n        range: this.fb.group(\n          {\n            start: [\n              this.data.range\n                ? this.data.range.start.substring(0, 16)\n                : isoDateFrom,\n              Validators.required,\n            ],\n            end: [\n              this.data.range\n                ? this.data.range.end.substring(0, 16)\n                : isoDateFrom,\n              Validators.required,\n            ],\n          },\n          { validator: DateTimeRangeValidator }\n        ),\n        // slots: [[...this.data.slots], [Validators.required]],\n      }),\n    });\n\n    this.initSlots(this.data.slots, formGroup);\n\n    this.formGroup = formGroup;\n  }\n\n  numSequence(n: number): Array<number> {\n    return Array(n);\n  }\n\n  onTemplateSelect() {\n    const data = {\n      url: '/promotions/templates',\n      actions: [\n        {\n          component: EventFormComponent,\n          type: 'add',\n          icon: 'add',\n        },\n        {\n          component: EventFormComponent,\n          type: 'edit',\n        },\n        {\n          component: BasketComponent,\n          type: 'list',\n          data: {\n            actions: [\n              {\n                component: EventFormComponent,\n                type: 'add',\n                icon: 'add',\n              },\n              {\n                component: EventFormComponent,\n                type: 'edit',\n              },\n            ],\n            reset: true,\n            dialog: true,\n          },\n        },\n      ],\n      save: false,\n    };\n\n    const dialogRef = this.dialog.open(BasketComponent, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: '100%',\n      width: '100%',\n      data,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.formGroup.controls['data']\n          .get('item')\n          .setValue({ key: result[0].info.id });\n\n        const tValue = result[0].info.value;\n        if (tValue !== undefined && tValue.capacity !== undefined) {\n          const slots = this.formGroup.controls['slots'] as FormArray;\n          slots.clear();\n\n          const range = this.formGroup.get('data').get('range');\n          this.addSlot(undefined, {\n            capacity: tValue.capacity,\n            range: {\n              min: new Date(range.get('start').value),\n              start: new Date(range.get('start').value),\n            },\n          });\n        }\n\n        this.updatePanel(this.templatePanelRef, result[0].info);\n      }\n    });\n  }\n\n  private updatePanel(panelRef, data: any) {\n    panelRef.clear();\n\n    const componentFactory = this.cfr.resolveComponentFactory(MsPanel);\n    const component = componentFactory.create(injector);\n\n    component.instance.onEnter('', data);\n\n    component.instance.show(true, true);\n    panelRef.insert(component.hostView);\n  }\n\n  onGroupSelect() {\n    const data = {\n      url: '/user/groups',\n      save: false,\n    };\n\n    const dialogRef = this.dialog.open(BasketComponent, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: '100%',\n      width: '100%',\n      data,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        this.formGroup.controls['data']\n          .get('group')\n          .setValue({ key: result[0].info.id });\n\n        this.updatePanel(this.groupPanelRef, result[0].info);\n      }\n    });\n  }\n\n  onType(event) {\n    this.title = this.types.filter(\n      (type) => type.value === event.value\n    )[0].viewValue;\n\n    this.updatePanel(this.templatePanelRef, { type: 'evt' });\n  }\n\n  initSlots(pSlots, formGroup) {\n    const slots = pSlots.map((slot) => this.createSlot(slot));\n    this.slotsNum = slots.length;\n\n    formGroup.addControl(\n      'slots',\n      new FormArray(slots, [Validators.required, Validators.minLength(1)])\n    );\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      const raw = this.formGroup.getRawValue();\n\n      // convert to UTC - in every form it needs to be done\n      raw.data.slots = (raw.slots as Array<object>).map((slot) => {\n        const slotStartDate = new Date(slot['range'].start);\n        const offset = slotStartDate.getTimezoneOffset() * 60000;\n        slot['range'].start = new Date(\n          slotStartDate.getTime() - offset\n        ).toISOString();\n        return slot;\n      });\n\n      raw.data.key = this.data.key;\n      delete raw.slots;\n\n      this.httpService.save(this.url, raw.data).subscribe({\n        next: (value) => {\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n\n  addSlot(event?, opts = {}) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    (this.formGroup.controls['slots'] as FormArray).insert(\n      0,\n      this.createSlot(opts)\n    );\n\n    this.slotsNum++;\n  }\n\n  removeSlot(event, i) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    (this.formGroup.controls['slots'] as FormArray).removeAt(i);\n\n    this.slotsNum--;\n  }\n\n  createSlot(data): FormGroup {\n    return this.fb.group({\n      range: this.fb.group(\n        {\n          min: [data.range ? data.range.start : undefined],\n          start: [\n            data.range ? data.range.start : undefined,\n            Validators.required,\n          ],\n          end: [data.range ? data.range.end : new Date()],\n        },\n        { validator: DateMinValidator }\n      ),\n      numOfItems: [\n        data.numOfItems ? data.numOfItems : 0,\n        [Validators.required, Validators.pattern('^[0-9]+$')],\n      ],\n      capacity: this.fb.group(\n        {\n          min: [data.capacity ? data.capacity.min : 0, Validators.required],\n          max: [data.capacity ? data.capacity.max : 0, Validators.required],\n        },\n        { validator: RangeValidator }\n      ),\n    });\n  }\n}\n\nconst RangeValidator: ValidatorFn = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  const min = control.get('min').value;\n  const max = control.get('max').value;\n\n  return min <= max ? null : { range: true };\n};\n\nconst DateMinValidator: ValidatorFn = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  const min = new Date(control.get('min').value);\n  const start = new Date(min.toDateString());\n  const end = new Date(control.get('start').value);\n\n  return start !== null && end !== null && start <= end\n    ? null\n    : { range: true };\n};\n\nconst DateTimeRangeValidator: ValidatorFn = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  const start = new Date(control.get('start').value);\n  const end = new Date(control.get('end').value);\n  return start !== null && end !== null && start < end ? null : { range: true };\n};\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>{{ title }}</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-label>Enter name</mat-label>\n          <input matInput [formControlName]=\"'name'\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('name').invalid\"\n            >Name is required!</mat-error\n          >\n        </mat-form-field>\n        <fieldset formGroupName=\"range\">\n          <legend>Time</legend>\n          <mat-form-field>\n            <mat-label>From</mat-label>\n            <input matInput formControlName=\"start\" type=\"datetime-local\" />\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>To</mat-label>\n            <input matInput formControlName=\"end\" type=\"datetime-local\" />\n          </mat-form-field>\n          <mat-error *ngIf=\"formGroup.controls.data.get('range').invalid\"\n            >Invalid Range</mat-error\n          >\n        </fieldset>\n        <fieldset>\n          <legend>Template</legend>\n          <mat-form-field>\n            <mat-label>Type</mat-label>\n            <mat-select\n              [formControlName]=\"'type'\"\n              (selectionChange)=\"onType($event)\"\n            >\n              <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n                {{ type.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <div style=\"width: 100%\" (click)=\"onTemplateSelect()\">\n            <ng-container #templatePanel> </ng-container>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Group</legend>\n          <mat-form-field>\n            <mat-label>Group</mat-label>\n            <mat-select\n              [formControlName]=\"'groupType'\"\n              (selectionChange)=\"onGroupType($event)\"\n            >\n              <mat-option\n                *ngFor=\"let group of groupTypes\"\n                [value]=\"group.value\"\n              >\n                {{ group.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <div style=\"width: 100%\" (click)=\"onGroupSelect()\">\n            <ng-container #groupPanel> </ng-container>\n          </div>\n        </fieldset>\n      </mat-expansion-panel>\n      <mat-expansion-panel *ngIf=\"slotsNum > 0\">\n        <mat-expansion-panel-header\n          btn-accordion\n          [style.background-color]=\"\n            formGroup.controls.slots.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <button mat-mini-fab color=\"primary\" (click)=\"addSlot($event)\">\n            <mat-icon>add</mat-icon>\n          </button>\n          <mat-panel-title>Slots</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-accordion>\n          <mat-expansion-panel\n            formArrayName=\"slots\"\n            *ngFor=\"\n              let slot of formGroup.controls.slots.controls;\n              let i = index\n            \"\n          >\n            <mat-expansion-panel-header\n              btn-accordion\n              [style.background-color]=\"slot.valid ? 'yellowgreen' : '#f44336'\"\n            >\n              <button\n                mat-mini-fab\n                color=\"accent\"\n                (click)=\"removeSlot($event, i)\" *ngIf=\"slotsNum > 1\"\n              >\n                <mat-icon>remove</mat-icon>\n              </button>\n              <mat-panel-title>{{\n                (slot.get('range').get('start').value !== null\n                  ? (slot.get('range').get('start').value | date: 'dd/MM/yyyy')\n                  : '') +\n                  ' - ' +\n                  slot.get('numOfItems').value +\n                  ' / (' +\n                  slot.get('capacity').get('min').value +\n                  '-' +\n                  slot.get('capacity').get('max').value +\n                  ')'\n              }}</mat-panel-title>\n            </mat-expansion-panel-header>\n            <div [formGroupName]=\"i\">\n              <mat-form-field>\n                <mat-label>Number of Items</mat-label>\n                <input matInput formControlName=\"numOfItems\" />\n                <mat-error *ngIf=\"slot.get('numOfItems').invalid\"\n                  >Value is required!</mat-error\n                >\n              </mat-form-field>\n              <fieldset [formGroupName]=\"'capacity'\">\n                <legend>Capacity</legend>\n                <mat-form-field>\n                  <mat-label>Min</mat-label>\n                  <input matInput formControlName=\"min\" type=\"number\" />\n                </mat-form-field>\n                <mat-form-field>\n                  <mat-label>Max</mat-label>\n                  <input matInput formControlName=\"max\" type=\"number\" />\n                </mat-form-field>\n                <mat-error *ngIf=\"slot.get('capacity').invalid\"\n                  >Invalid Range</mat-error\n                >\n              </fieldset>\n              <fieldset [formGroupName]=\"'range'\">\n                <legend>Time</legend>\n                <mat-form-field>\n                  <mat-label>From</mat-label>\n                  <input\n                    matInput\n                    [matDatepicker]=\"pickerStart\"\n                    formControlName=\"start\"\n                  />\n                  <mat-datepicker-toggle\n                    matSuffix\n                    [for]=\"pickerStart\"\n                  ></mat-datepicker-toggle>\n                  <mat-datepicker #pickerStart></mat-datepicker>\n                </mat-form-field>\n                <mat-error *ngIf=\"slot.get('range').invalid\"\n                    >Start date of the slot must be greater than the date of the promotion!</mat-error\n                  >\n              </fieldset>\n            </div>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n","import { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UIModule } from '../ui/ui.module';\nimport { BusinessRoutingModule } from './business-routing.module';\nimport {\n  BasketComponent, CampaignFormComponent, CarFormComponent,\n  EditorComponent,\n  EventComponent,\n  EventFilterComponent, EventFormComponent,\n  FeedbackFormComponent, GroupFilterComponent, GroupFormComponent, HelpComponent, PanelComponent,\n  ProfileComponent, ProfileStatusComponent, QrcodeComponent, RewardComponent, SettingComponent\n} from './components';\n@NgModule({\n  declarations: [\n    CarFormComponent,\n    ProfileComponent,\n    SettingComponent,\n    EventFormComponent,\n    EventFilterComponent,\n    GroupFilterComponent,\n    PanelComponent,\n    EditorComponent,\n    BasketComponent,\n    EventComponent,\n    FeedbackFormComponent,\n    QrcodeComponent,\n    HelpComponent,\n    GroupFormComponent,\n    RewardComponent,\n    ProfileStatusComponent,\n    CampaignFormComponent,\n  ],\n  imports: [\n    UIModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BusinessRoutingModule,\n  ],\n  providers: [DatePipe],\n})\nexport class BusinessModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { HttpService } from 'src/app/services/http.service';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n})\nexport class FeedbackFormComponent implements OnInit {\n  formGroup: FormGroup;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<FeedbackFormComponent>,\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private httpService: HttpService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.data = data.value ? data.value : { images: [] };\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        rate: [this.data.rate, Validators.required],\n        desc: [\n          this.data.desc !== undefined ? this.data.desc : '',\n          [\n            Validators.required,\n            Validators.minLength(10),\n            Validators.maxLength(160),\n          ],\n        ],\n      }),\n    });\n  }\n\n  onRate(evt): void {\n    this.data.rate = evt.value;\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      let raw = this.formGroup.getRawValue();\n      this.httpService.save(this.url, raw.data).subscribe({\n        next: (value) => {\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Feedback</mat-panel-title>\n        </mat-expansion-panel-header>\n        <fieldset>\n          <legend>Rate</legend>\n          <div legend-right>{{ data.rate }}</div>\n          <mat-slider\n            min=\"0\"\n            max=\"9\"\n            [formControlName]=\"'rate'\"\n            (input)=\"onRate($event)\"\n          ></mat-slider>\n        </fieldset>\n        <fieldset>\n          <legend>Description (min. 10, max. 160)</legend>\n          <div legend-right>\n            {{ formGroup.controls.data.get('desc').value.length }}\n          </div>\n          <mat-form-field>\n            <textarea\n              matInput\n              [formControlName]=\"'desc'\"\n              rows=\"5\"\n              maxlength=\"160\"\n            ></textarea>\n            <mat-error *ngIf=\"formGroup.controls.data.get('desc').invalid\"\n              >Description is required!</mat-error\n            >\n          </mat-form-field>\n        </fieldset>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-basket',\n  templateUrl: './basket.component.html',\n})\nexport class BasketComponent implements OnInit {\n  items: Array<any> = new Array();\n\n  selectedIdx: any;\n  overlayData: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n\n  url: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<BasketComponent>,\n    private activatedRoute: ActivatedRoute,\n    private httpService: HttpService\n  ) {\n    /*if (data.url !== undefined) {\n      this.url = data.url;\n    } else {*/\n    let url = this.activatedRoute['_routerState'].snapshot.url.replace(\n      '/base',\n      ''\n    );\n\n    url = url.substring(1);\n    this.url = url.substring(url.indexOf('/'));\n\n    //}\n  }\n\n  ngOnInit(): void {\n    if (this.data.selected !== undefined) {\n      this.onSelect(this.data.selected);\n    }\n  }\n\n  onClick(): void {\n    // attach the selected members\n    if (this.items.length > 0) {\n      if (this.data.save !== false) {\n        this.progress.mode = 'indeterminate';\n\n        const keys = new Array();\n        for (const item of this.items) {\n          keys.push(item.info.id);\n        }\n\n        this.httpService.save(this.url, keys).subscribe({\n          next: (value) => {\n            this.dialogRef.close(value);\n          },\n          error: (error) => {\n            this.progress.mode = 'determine';\n            this.progress.color = 'warn';\n          },\n          complete: () => {\n            this.progress.mode = 'determine';\n          },\n        });\n      } else {\n        this.dialogRef.close(this.items);\n      }\n    }\n  }\n\n  onBasket(idx): void {\n    if (idx === this.selectedIdx) {\n      this.selectedIdx = undefined;\n      this.overlayData = undefined;\n    } else {\n      this.selectedIdx = idx;\n      this.overlayData = this.items[idx].info;\n    }\n  }\n\n  onDelete(): void {\n    this.items.splice(this.selectedIdx, 1);\n    this.onBasket(this.selectedIdx);\n  }\n\n  onSelect(evt): void {\n    const items = new Array();\n    for (const item in evt) {\n      if (evt.hasOwnProperty(item)) {\n        items.push(evt[item]);\n      }\n    }\n    this.items = items; // [].concat(this.items.concat(items));\n  }\n\n  back(): void {\n    if (this.data.reset) {\n      this.dialogRef.close({});\n    } else {\n      this.dialogRef.close();\n    }\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  <div class=\"mat-basket-container\" *ngIf=\"!data.dialog\">\n    <mat-chip-list>\n      <mat-chip\n        *ngFor=\"let item of items; let idx = index\"\n        (click)=\"onBasket(idx)\" [ngClass]=\"{'ms-active': idx === selectedIdx}\"\n        matRipple\n      >\n        <p *ngIf=\"item.info.imgs && item.info.imgs[0]\" style=\"width: 40px;\">{{ item.info.header ? item.info.header.main : '' }}</p>\n        <p *ngIf=\"!item.info.imgs || !item.info.imgs[0]\">{{ item.info.header ? item.info.header.main : '' }}</p>\n        <mat-chip-avatar *ngIf=\"item.info.imgs && item.info.imgs[0]\"><img [src]=\"item.info.imgs[0]\"/></mat-chip-avatar>\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n  <button mat-icon-button class=\"mat-close\" (click)=\"onClick()\" *ngIf=\"!data.dialog\">\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<div class=\"mat-basket-content\">\n  <ms-list\n    [url]=\"data.url\"\n    [multiple]=\"data.multiple\"\n    [actions]=\"data.actions\"\n    (msSelect)=\"onSelect($event)\"\n    [overlayData]=\"overlayData\"\n    (msDelete)=\"onDelete()\"\n    [selectable]=\"!data.dialog && true\"\n  >\n  </ms-list>\n</div>\n","import { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { HttpService } from 'src/app/services/http.service';\nimport { DataService } from '../../../services/data.service';\n\n@Component({\n  selector: 'app-qrcode',\n  templateUrl: './qrcode.component.html',\n})\nexport class QrcodeComponent implements OnInit {\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n  \n  camera = false;\n  qrCode = 'sample text';\n\n  constructor(\n    public dialogRef: MatDialogRef<QrcodeComponent>,\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private httpService: HttpService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    const params = new HttpParams();\n\n    this.httpService.get(this.url + '/code', params).subscribe({\n      next: (result) => {\n        this.qrCode = result['code'];\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        console.log('complete');\n      },\n    });\n  }\n\n  onScanned(evt): void {\n    this.httpService.post(this.url + '/verify', { code: evt }).subscribe({\n      next: (value) => {\n        this.dialogRef.close(value);\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        this.progress.mode = 'determine';\n      },\n    });\n  }\n\n  turnCamera(on = false): void {\n    this.camera = on;\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-dialog-img\">\n  <ms-qrcode [qrCode]=\"qrCode\" [camera]=\"camera\" (msScanned)=\"onScanned($event)\"></ms-qrcode>\n</div>\n<div mat-dialog-actions align=\"center\">\n  <button *ngIf=\"!camera\" mat-icon-button (click)=\"turnCamera(true)\">\n    <mat-icon>cameraswitch</mat-icon>\n  </button>\n  <button *ngIf=\"camera\" mat-icon-button (click)=\"turnCamera(false)\">\n    <mat-icon>qr_code</mat-icon>\n  </button>\n</div>\n","import { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from 'src/app/services/http.service';\n\ninterface Option {\n  value: string;\n  viewValue: string;\n}\n\n// distance bar also, not just calendar bar\n\n@Component({\n  selector: 'app-group-filter',\n  templateUrl: './group-filter.component.html',\n})\nexport class GroupFilterComponent implements OnInit {\n  formGroup: FormGroup;\n\n  progress: any = { mode: 'determine', value: 0, color: 'primary' };\n\n  url: any;\n\n  key: any;\n\n  setting: any;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<GroupFilterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private activatedRoute: ActivatedRoute,\n    private httpService: HttpService\n  ) {\n    this.url = '/user/settings';\n\n    let actionUrl = this.activatedRoute['_routerState'].snapshot.url.replace(\n      '/base',\n      ''\n    );\n\n    actionUrl = actionUrl.substring(1);\n    this.key = actionUrl.substring(actionUrl.indexOf('/'));\n  }\n\n  onData(key, evt): void {\n    this.formGroup.controls[key].setValue(evt.value);\n  }\n\n  ngOnInit(): void {\n    let params = new HttpParams();\n    params = params.set('key', this.key);\n\n    this.httpService.get(this.url, params).subscribe({\n      next: (result) => {\n        let formGroup = new FormGroup({});\n\n        this.setting = result;\n        this.setting.items.map((item) => {\n          switch (item.type) {\n            case 'os':\n              formGroup.addControl(item.name, new FormControl([...item.data]));\n            default:\n          }\n        });\n\n        this.formGroup = formGroup;\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        console.log('complete');\n      },\n    });\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      let raw = this.formGroup.getRawValue();\n\n      let items = this.setting.items.map((item) => {\n        if (raw[item.name] instanceof Array) {\n          item.data = [...raw[item.name]];\n        } else {\n          item.data = [raw[item.name]];\n        }\n        return item;\n      });\n\n      this.setting.items = items;\n\n      let params = new HttpParams();\n      params = params.set('key', this.key);\n\n      this.httpService.save(this.url, this.setting, params).subscribe({\n        next: (result) => {\n          this.dialogRef.close(result['items']);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button mat-icon-button class=\"mat-close\" (click)=\"onClick()\">\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\" *ngIf=\"formGroup\">\n    <fieldset *ngFor=\"let item of setting.items\">\n      <legend>{{item.name}}</legend>\n      <div legend-right>{{ item.options[formGroup.controls[item.name].value].viewValue }}</div>\n      <mat-slider\n        min=\"0\"\n        [max]=\"item.options.length - 1\"\n        [formControlName]=\"item.name\"\n        (input)=\"onData(item.name, $event)\"\n      ></mat-slider>\n    </fieldset>\n  </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DataService } from 'src/app/services/data.service';\n\ninterface Option {\n  value: string;\n  viewValue: string;\n}\n@Component({\n  selector: 'app-event-filter',\n  templateUrl: './event-filter.component.html',\n})\nexport class EventFilterComponent implements OnInit {\n  formGroup: FormGroup;\n\n  categories: any;\n  currencies: any;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<EventFilterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dataService: DataService\n  ) {\n    this.categories = this.dataService.eventCategories;\n    this.currencies = this.dataService.currencies;\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      category: [''],\n      city: [''],\n      free: [''],\n      /*amount: this.fb.group({\n        from: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        to: [\"\", [Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        currency: [\"\", Validators.required]\n      }),*/\n    });\n  }\n\n  onClick(): void {\n    let raw;\n\n    if (this.formGroup.valid) {\n      raw = this.formGroup.getRawValue();\n    }\n    this.dialogRef.close(raw);\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button mat-icon-button class=\"mat-close\" (click)=\"onClick()\">\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-form-field>\n      <mat-label>Category</mat-label>\n      <mat-select formControlName=\"category\">\n        <mat-option\n          *ngFor=\"let category of categories\"\n          [value]=\"category.value\"\n        >\n          {{ category.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>City</mat-label>\n      <input matInput formControlName=\"city\" />\n      <mat-error *ngIf=\"formGroup.controls['city'].invalid\"\n        >City is required!</mat-error\n      >\n    </mat-form-field>\n    <mat-slide-toggle labelPosition=\"before\" #paid formControlName=\"free\">{{\n      paid.checked ? 'Paid' : 'Free'\n    }}</mat-slide-toggle>\n    <!--<fieldset *ngIf=\"paid.checked\" formGroupName=\"amount\">\n    <legend>Amount</legend>\n    <mat-form-field>\n      <mat-label>From</mat-label>\n      <input matInput formControlName=\"from\" type=\"number\"/>\n      <mat-error *ngIf=\"formGroup.controls.amount.controls['from'].invalid\"\n        >Number is required!</mat-error\n      >\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>To</mat-label>\n      <input matInput formControlName=\"to\" type=\"number\"/>\n      <mat-error *ngIf=\"formGroup.controls.amount.controls['to'].invalid\"\n        >Number is required!</mat-error\n      >\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Currency</mat-label>\n      <mat-select formControlName=\"currency\">\n        <mat-option\n          *ngFor=\"let currency of currencies\"\n          [value]=\"currency.value\"\n        >\n          {{ currency.viewValue }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </fieldset>-->\n  </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DataService } from 'src/app/services/data.service';\nimport { HttpService } from 'src/app/services/http.service';\n\nconst DESC_MIN = 10;\nconst DESC_MAX = 160;\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n})\nexport class EventFormComponent implements OnInit {\n  formGroup: FormGroup;\n\n  categories: any;\n  currencies: any;\n  types: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  isAdd: any;\n\n  isPriority = true;\n\n  isMain = true;\n\n  category = 'l';\n\n  // main event flag - only one main event does exist, which contains assign car and signal chat group\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<EventFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dataService: DataService,\n    private httpService: HttpService\n  ) {\n    this.categories = this.dataService.eventCategories;\n    this.currencies = this.dataService.currencies;\n\n    if (data.extra !== undefined) {\n      if (data.extra.main !== undefined) {\n        this.isMain = data.isAdd ? false : data.extra.main;\n      }\n\n      if (data.extra.category !== undefined) {\n        this.category = data.extra.category;\n      }\n    }\n\n    if (data.url.indexOf('items') === -1) {\n      this.types = this.dataService.eventTypes.filter((obj) => {\n        return obj.value === 'g';\n      });\n    } else {\n      this.types = this.dataService.eventTypes;\n    }\n\n    if (data.url.indexOf('promotions') !== -1) {\n      this.isPriority = false;\n    }\n\n    this.data = data.value ? data.value : { type: 'g', amount: {} };\n    this.url = data.url;\n  }\n\n  validatorsForChatKey(type) {\n    const validators = new Array();\n    if (type === 'g') {\n      validators.push(Validators.required);\n    }\n\n    validators.push(\n      Validators.pattern(\n        '^https?://(www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@,!:%_+.~#?&//=]*)$'\n      )\n    );\n    return validators;\n  }\n\n  // if random, then you can set activity profile date from and you rated greater than\n  ngOnInit(): void {\n    const chatKeyValidators = new Array();\n\n    chatKeyValidators.push(\n      Validators.pattern(\n        '^https?://(www.)?[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\\\b([-a-zA-Z0-9()@,!:%_+.~#?&//=]*)$'\n      )\n    );\n\n    const chatUrlValidators = this.validatorsForChatKey(this.data.type);\n\n    const offset = new Date().getTimezoneOffset() * 60000;\n    const dateFrom = new Date(Date.now() - offset);\n    const isoDateFrom = dateFrom.toISOString().substring(0, 16);\n    dateFrom.setMinutes(dateFrom.getMinutes() + 1);\n    const isoDateTo = dateFrom.toISOString().substring(0, 16);\n\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        type: [this.data.type, Validators.required],\n        optional: [\n          this.data.optional ? this.data.optional : false,\n          Validators.required,\n        ],\n        ticket: [\n          this.data.ticket ? this.data.ticket : false,\n          Validators.required,\n        ],\n        chatKey: [this.data.chatKey, [...chatUrlValidators]],\n        category: [\n          {\n            value:\n              this.category !== undefined ? this.category : this.data.category,\n            disabled: !this.isMain,\n          },\n          Validators.required,\n        ],\n        position: [\n          this.data.position !== undefined\n            ? this.data.position.x + ', ' + this.data.position.y\n            : '',\n          Validators.required,\n        ],\n        capacity: this.fb.group(\n          {\n            min: [\n              this.data.capacity ? this.data.capacity.min : 0,\n              Validators.required,\n            ],\n            max: [\n              this.data.capacity ? this.data.capacity.max : 0,\n              Validators.required,\n            ],\n          },\n          { validator: RangeValidator }\n        ),\n        name: [this.data.name, Validators.required],\n        urlRef: [this.data.urlRef, [...chatKeyValidators]], // google\n        range: this.fb.group(\n          {\n            start: [\n              this.data.range\n                ? this.data.range.start.substring(0, 16)\n                : isoDateFrom,\n              Validators.required,\n            ],\n            end: [\n              this.data.range\n                ? this.data.range.end.substring(0, 16)\n                : isoDateFrom,\n              Validators.required,\n            ],\n          },\n          { validator: DateTimeRangeValidator }\n        ),\n        desc: [\n          this.data.desc !== undefined ? this.data.desc : '',\n          [\n            Validators.required,\n            Validators.minLength(DESC_MIN),\n            Validators.maxLength(DESC_MAX),\n          ],\n        ],\n        telNum: [\n          this.data.telNum,\n          this.data.type === 'c' ? Validators.required : undefined,\n        ],\n        priority: [\n          this.data.priority ? this.data.priority : false,\n          Validators.required,\n        ],\n      }),\n      rule: this.fb.group({\n        balanced: [\n          this.data.rule && this.data.rule.balanced\n            ? this.data.rule.balanced\n            : false,\n          Validators.required,\n        ],\n        met: [\n          this.data.rule && this.data.rule.met ? this.data.rule.met : false,\n          Validators.required,\n        ],\n        rate: [\n          this.data.rule && this.data.rule.rate ? this.data.rule.rate : 0,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        range: this.fb.group(\n          {\n            start: [\n              this.data.rule && this.data.rule.range\n                ? this.data.rule.range.start\n                : undefined,\n            ],\n            end: [\n              this.data.rule && this.data.rule.range\n                ? this.data.rule.range.end\n                : undefined,\n            ],\n          },\n          { validator: DateTimeRangeValidator }\n        ),\n      }),\n      expense: this.fb.group({\n        amount: this.fb.group({\n          value: [\n            this.data.amount.value,\n            [\n              Validators.required,\n              Validators.pattern('^[0-9]+[\\\\.]?[0-9]{0,}$'),\n            ],\n          ],\n          currency: [this.data.amount.currency, Validators.required],\n        }),\n      }),\n    });\n  }\n\n  onTypeChange(event) {\n    (this.formGroup.controls['data'] as FormGroup).controls[\n      'chatKey'\n    ].clearValidators();\n\n    const chatUrlValidators = this.validatorsForChatKey(event.value);\n    (this.formGroup.controls['data'] as FormGroup).controls[\n      'chatKey'\n    ].setValidators([...chatUrlValidators]);\n\n    (this.formGroup.controls['data'] as FormGroup).controls[\n      'chatKey'\n    ].updateValueAndValidity();\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      const raw = this.formGroup.getRawValue();\n      raw.data.amount = raw.expense.amount;\n      raw.data.rule = raw.rule;\n      raw.data.key = this.data.key;\n\n      raw.data.position = raw.data.position\n        .split(',')\n        .map((item) => item.trim());\n\n      this.httpService.save(this.url, raw.data).subscribe({\n        next: (value) => {\n          console.log(value);\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n\nconst RangeValidator: ValidatorFn = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  const min = control.get('min').value;\n  const max = control.get('max').value;\n\n  return min <= max ? null : { range: true };\n};\n\nconst DateTimeRangeValidator: ValidatorFn = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  const startS = control.get('start').value;\n  const endS = control.get('end').value;\n\n  let start;\n  if (startS !== null) {\n    start = new Date(startS);\n  }\n\n  let end;\n  if (endS !== null) {\n    end = new Date(endS);\n  }\n\n  return start === undefined || end === undefined || start < end\n    ? null\n    : { range: true };\n};\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Info</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-label>Type</mat-label>\n          <mat-select\n            [formControlName]=\"'type'\"\n            (selectionChange)=\"onTypeChange($event)\"\n          >\n            <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n              {{ type.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Enter name</mat-label>\n          <input matInput [formControlName]=\"'name'\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('name').invalid\"\n            >Name is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field\n          *ngIf=\"formGroup.controls.data.get('type').value === 'g'\"\n        >\n          <mat-label>Enter Chat Url</mat-label>\n          <input matInput [formControlName]=\"'chatKey'\" type=\"url\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('chatKey').invalid\"\n            >Chat url is required!</mat-error\n          >\n        </mat-form-field>\n        <fieldset>\n          <legend>Location</legend>\n          <mat-form-field>\n            <mat-label>Category</mat-label>\n            <mat-select [formControlName]=\"'category'\">\n              <mat-option\n                *ngFor=\"let category of categories\"\n                [value]=\"category.value\"\n              >\n                {{ category.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Enter Location (latitude,longitude)</mat-label>\n            <div class=\"btn_form_bar\">\n              <div class=\"btn_form\">\n                <div class=\"map container\">\n                  <a href=\"https://maps.google.com\" target=\"_blank\">\n                    <img class=\"img\" />\n                  </a>\n                </div>\n              </div>\n            </div>\n            <input matInput [formControlName]=\"'position'\" />\n            <mat-error *ngIf=\"formGroup.controls.data.get('position').invalid\"\n              >Position is required!</mat-error\n            >\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Reference link (Google, Booking etc.)</mat-label>\n            <input matInput [formControlName]=\"'urlRef'\" />\n            <mat-error *ngIf=\"formGroup.controls.data.get('urlRef').invalid\"\n              >Address is required!</mat-error\n            >\n          </mat-form-field>\n        </fieldset>\n        <fieldset formGroupName=\"range\">\n          <legend>Time</legend>\n          <mat-form-field>\n            <mat-label>From</mat-label>\n            <input matInput formControlName=\"start\" type=\"datetime-local\" />\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>To</mat-label>\n            <input matInput formControlName=\"end\" type=\"datetime-local\" />\n          </mat-form-field>\n          <mat-error *ngIf=\"formGroup.controls.data.get('range').invalid\"\n            >Invalid Range</mat-error\n          >\n        </fieldset>\n        <mat-slide-toggle\n        *ngIf=\"!isMain\"\n        [formControlName]=\"'optional'\"\n        labelPosition=\"before\"\n        >Optional</mat-slide-toggle\n      >\n      <fieldset formGroupName=\"capacity\" *ngIf=\"isMain || formGroup.controls.data.get('optional').value\">\n          <legend>Capacity</legend>\n          <mat-form-field>\n            <mat-label>Min</mat-label>\n            <input matInput formControlName=\"min\" type=\"number\" />\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Max</mat-label>\n            <input matInput formControlName=\"max\" type=\"number\" />\n          </mat-form-field>\n          <mat-error *ngIf=\"formGroup.controls.data.get('capacity').invalid\"\n            >Invalid Range</mat-error\n          >\n        </fieldset>\n        <fieldset>\n          <legend>Description (min. 10, max. 160)</legend>\n          <div legend-right>\n            {{ formGroup.controls.data.get('desc').value.length }}\n          </div>\n          <mat-form-field>\n            <textarea\n              matInput\n              [formControlName]=\"'desc'\"\n              rows=\"5\"\n              maxlength=\"160\"\n            ></textarea>\n            <mat-error *ngIf=\"formGroup.controls.data.get('desc').invalid\"\n              >Description is required!</mat-error\n            >\n          </mat-form-field>\n        </fieldset>\n        <mat-form-field\n          *ngIf=\"\n            formGroup.controls.data.get('type').value === 'c' ||\n            formGroup.controls.data.get('type').value === 'g'\n          \"\n        >\n          <mat-label>Enter Telephone Number</mat-label>\n          <input matInput [formControlName]=\"'telNum'\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('telNum').invalid\"\n            >Telephone Number is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-slide-toggle [formControlName]=\"'ticket'\" labelPosition=\"before\"\n          >Ticket</mat-slide-toggle\n        >\n        <mat-slide-toggle *ngIf=\"isPriority && isMain\" [formControlName]=\"'priority'\" labelPosition=\"before\"\n          >Priority</mat-slide-toggle\n        >\n      </mat-expansion-panel>\n      <mat-expansion-panel\n        formGroupName=\"rule\"\n        *ngIf=\"formGroup.controls.data.get('priority').value\"\n      >\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.rule.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Rule</mat-panel-title>\n        </mat-expansion-panel-header>\n        <div>\n          <mat-slide-toggle\n            [formControlName]=\"'balanced'\"\n            labelPosition=\"before\"\n            >Balanced Female/Male Ratio</mat-slide-toggle\n          >\n          <mat-form-field>\n            <mat-label>Rate From</mat-label>\n            <input matInput [formControlName]=\"'rate'\" />\n            <mat-error *ngIf=\"formGroup.controls.rule.get('rate').invalid\"\n              >Value is required!</mat-error\n            >\n          </mat-form-field>\n          <mat-slide-toggle [formControlName]=\"'met'\" labelPosition=\"before\"\n            >Has already met</mat-slide-toggle\n          >\n          <fieldset formGroupName=\"range\">\n            <legend>Time</legend>\n            <mat-form-field>\n              <mat-label>Date After</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"pickerStart\"\n                formControlName=\"start\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"pickerStart\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #pickerStart></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Date Before</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"pickerEnd\"\n                formControlName=\"end\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"pickerEnd\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #pickerEnd></mat-datepicker>\n            </mat-form-field>\n            <mat-error *ngIf=\"formGroup.controls.rule.get('range').invalid\"\n              >Invalid Range</mat-error\n            >\n          </fieldset>\n        </div>\n      </mat-expansion-panel>\n      <mat-expansion-panel formGroupName=\"expense\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.expense.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Expense</mat-panel-title>\n        </mat-expansion-panel-header>\n        <fieldset formGroupName=\"amount\">\n          <legend>Amount</legend>\n          <mat-form-field>\n            <mat-label>eg. 12.34</mat-label>\n            <input matInput [formControlName]=\"'value'\" />\n            <mat-error\n              *ngIf=\"\n                formGroup.controls.expense.get('amount').get('value').invalid\n              \"\n              >Value is required!</mat-error\n            >\n          </mat-form-field>\n          <mat-form-field>\n            <mat-label>Currency</mat-label>\n            <mat-select [formControlName]=\"'currency'\">\n              <mat-option\n                *ngFor=\"let currency of currencies\"\n                [value]=\"currency.value\"\n              >\n                {{ currency.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </fieldset>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n","import { HttpEventType } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Canvas } from 'src/lib/offscreen';\nimport { HttpService } from '../../../services/http.service';\nimport { EventBusService } from '../../../services/event-bus.service';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n})\nexport class EditorComponent implements OnInit {\n  private mtx: any;\n  private img: any;\n  private size: any;\n  private file: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n\n  constructor(\n    public dialogRef: MatDialogRef<EditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private eventBusService: EventBusService,\n    public httpService: HttpService,\n    private domSanitizer: DomSanitizer\n  ) {}\n\n  onChange(evt) {\n    if (evt.img) {\n      this.img = evt.img;\n    }\n\n    if (evt.size) {\n      this.size = evt.size;\n    }\n\n    if (evt.mtx) {\n      this.mtx = evt.mtx;\n    }\n  }\n\n  ngOnInit(): void {}\n\n  onClick(): void {\n    const canvas = new Canvas(this.size.width, this.size.width);\n    const img = canvas.load(this.img, this.mtx, 0.9);\n\n    const edited = new Blob([img], { type: 'application/octet-stream' });\n\n    this.progress.mode = 'indeterminate';\n\n    const url =\n      'images' +\n      (this.data.value !== undefined ? '/' + this.data.value.name : '');\n\n    const formData = new FormData();\n    /*\n    for (const paramName in params) {\n      formData.append(imgCanvas[],img);\n    }\n    */\n    formData.append('orig', this.file);\n    formData.append('edited', edited);\n\n    this.httpService.upload(url, formData).subscribe({\n      next: (event) => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress.mode = 'determine';\n          this.progress.value = Math.round(100 * (event.loaded / event.total));\n        } else if (event.type === HttpEventType.Response) {\n          if (event.status === 201 || event.status === 200) {\n            this.dialogRef.close({\n              id: event.body['name'],\n              idx: this.data.idx,\n              mtx: this.mtx,\n            });\n          }\n        }\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        this.progress.mode = 'determine';\n      },\n    });\n  }\n\n  selectFile(e?) {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      this.data.src = reader.result as string;\n    };\n    if (e.target.files[0]) {\n      this.file = e.target.files[0];\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  rotate(value) {\n    this.eventBusService.rotate.emit({ degree: value });\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button mat-icon-button class=\"mat-close\" (click)=\"onClick()\">\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-dialog-img\">\n  <ms-editor *ngIf=\"data\" [data]=\"data\" (changed)=\"onChange($event)\"></ms-editor>\n</div>\n<div mat-dialog-actions align=\"center\">\n  <button mat-icon-button (click)=\"rotate(-90)\">\n    <mat-icon>rotate_left</mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"fileInput.click()\">\n    <mat-icon>image_search</mat-icon>\n  </button>\n  <input type=\"file\" #fileInput class=\"file_button\" (change)=\"selectFile($event)\"/>\n  <button mat-icon-button (click)=\"rotate(90)\">\n    <mat-icon>rotate_right</mat-icon>\n  </button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n})\nexport class HelpComponent {\n  constructor() {}\n}\n","Help\n","export * from './car/car.component';\nexport * from './group/group.component';\nexport * from  './event-filter/event-filter.component';\nexport * from  './group-filter/group-filter.component';\nexport * from  './event/event.component';\nexport * from  './profile/profile.component';\nexport * from  './setting/setting.component';\nexport * from  './feedback/feedback.component';\nexport * from  './profile-status/profile-status.component';\nexport * from  './campaign/campaign.component';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MsList } from 'src/lib';\nimport {\n  BasketComponent,\n  CampaignFormComponent,\n  CarFormComponent,\n  EventFormComponent,\n  FeedbackFormComponent,\n  GroupFormComponent,\n  PanelComponent,\n  ProfileComponent,\n  ProfileStatusComponent,\n  QrcodeComponent,\n  RewardComponent,\n  SettingComponent,\n} from './components';\n\n// filter, add, attach\nconst routes: Routes = [\n  { path: '', redirectTo: 'activity', pathMatch: 'full' },\n  {\n    path: 'activity',\n    data: {\n      reuse: true,\n      icon: 'notifications',\n    },\n    children: [\n      { path: '', redirectTo: 'events', pathMatch: 'full' },\n      {\n        path: 'events',\n        component: MsList,\n        data: {\n          reuse: true,\n          icon: 'insert_invitation',\n          actions: [\n            {\n              // component: EventFormComponent,\n              component: QrcodeComponent,\n              type: 'verify',\n            },\n            {\n              // component: EventFormComponent,\n              component: QrcodeComponent,\n              type: 'code',\n            },\n          ],\n          multiple: true,\n          event: true, //temporary\n          animation: 'One',\n          group: 'date',\n        },\n      },\n      {\n        path: 'events/:id',\n        data: {\n          icon: 'insert_invitation',\n          dialog: true,\n        },\n        children: [\n          { path: '', redirectTo: 'items', pathMatch: 'full' },\n          {\n            path: 'items',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'list',\n              actions: [\n                {\n                  component: EventFormComponent,\n                  type: 'add',\n                  icon: 'add',\n                },\n                {\n                  component: EventFormComponent,\n                  type: 'edit',\n                },\n              ],\n              event: true, //temporary\n              animation: 'One1',\n            },\n          },\n          {\n            path: 'items/:id',\n            data: {\n              icon: 'insert_invitation',\n              dialog: true,\n            },\n            children: [\n              { path: '', redirectTo: 'members', pathMatch: 'full' },\n              {\n                path: 'members',\n                component: MsList,\n                data: {\n                  reuse: true,\n                  animation: 'Two1',\n                },\n              },\n            ],\n          },\n          {\n            path: 'members',\n            component: MsList,\n            data: {\n              animation: 'One',\n              reuse: true,\n              icon: 'groups',\n              actions: [\n                {\n                  component: BasketComponent,\n                  type: 'add',\n                  icon: 'add',\n                  multiple: true,\n                  // only profiles - members url part will be replaced by profiles\n                  url: '/games/rate_met', // backend call - not rate_met, filter out already added members\n                },\n              ],\n            },\n            children: [\n              { path: '', redirectTo: 'schools', pathMatch: 'full' },\n              {\n                path: 'schools',\n                component: MsList,\n                data: {\n                  reuse: true,\n                  animation: 'One1',\n                },\n              },\n            ],\n          },\n          {\n            path: 'feedbacks',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'feedback_ext',\n              actions: [\n                {\n                  component: FeedbackFormComponent,\n                  type: 'add',\n                  icon: 'add',\n                },\n                {\n                  component: FeedbackFormComponent,\n                  type: 'edit',\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        path: 'invitations',\n        component: MsList,\n        data: {\n          reuse: true,\n          icon: 'mail',\n          event: true, //temporary\n          animation: 'Two',\n        },\n      },\n      {\n        path: 'invitations/:id',\n        data: {\n          icon: 'insert_invitation',\n          dialog: true,\n        },\n        children: [\n          { path: '', redirectTo: 'items', pathMatch: 'full' },\n          {\n            path: 'items',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'list',\n              event: true, //temporary\n              animation: 'Two1',\n            },\n          },\n\n          {\n            path: 'members',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'groups',\n              actions: [],\n            },\n          },\n          {\n            path: 'feedbacks',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'feedback_ext',\n            },\n          },\n        ],\n      },\n      {\n        path: 'promotions',\n        component: MsList,\n        data: {\n          reuse: true,\n          icon: 'campaign',\n          animation: 'One',\n        },\n      },\n      {\n        path: 'promotions/:id',\n        data: {\n          icon: 'insert_invitation',\n          dialog: true,\n        },\n        children: [\n          { path: '', redirectTo: 'items', pathMatch: 'full' },\n          {\n            path: 'items',\n            component: MsList,\n            data: {\n              reuse: true,\n              event: true, //temporary\n              animation: 'One1',\n            },\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: 'user',\n    data: {\n      reuse: true,\n      icon: 'person',\n      //type: 'P',\n    },\n    children: [\n      { path: '', redirectTo: 'profile', pathMatch: 'full' },\n      {\n        path: 'profile',\n        component: PanelComponent,\n        data: {\n          reuse: true,\n          icon: 'profile_ext',\n          actions: [\n            {\n              component: RewardComponent,\n              type: 'share',\n              icon: 'send',\n            },\n            {\n              component: RewardComponent,\n              type: 'reward',\n              icon: 'military_tech',\n            },\n            {\n              component: SettingComponent,\n              type: 'logout',\n              icon: 'logout',\n              color: 'warn',\n            },\n            { component: ProfileComponent, type: 'edit', icon: 'edit' },\n          ],\n        },\n      },\n      {\n        path: 'cars',\n        component: MsList,\n        data: {\n          reuse: true,\n          icon: 'airport_shuttle',\n          actions: [\n            {\n              component: CarFormComponent,\n              type: 'add',\n              icon: 'add',\n            },\n            {\n              component: CarFormComponent,\n              type: 'edit',\n            },\n          ],\n          event: true, //temporary\n        },\n      },\n      // with registered profession, offer service az ismerosoknek - festes, villanyszereles stb.??\n      // itt fontos, hogy a munka elvegzeseert jar a csillag nem a kulsoert\n\n      // job search (recommendation menu - jobs / events / people),\n      // job announcement (profile, create campaign - job advertisement or idea - last two icon),\n      // game menu (click on each other)...\n\n      // it's for group invite, when you are going to restructure a team (at the top menu bar)\n      // you can select event created by organizer or you can organize your own by group\n      // admin groups has statistics tab - who is the less popular, why? who is the most populat why?\n      // why is when you like by category for people\n      // show optimal groups (the size of the group is configurable)\n      {\n        path: 'groups',\n        component: MsList,\n        data: {\n          reuse: true,\n          icon: 'groups',\n          actions: [\n            {\n              component: GroupFormComponent,\n              type: 'add',\n              icon: 'group_add',\n            },\n            {\n              component: GroupFormComponent,\n              type: 'edit',\n            },\n            {\n              component: GroupFormComponent,\n              type: 'share',\n            },\n          ],\n        },\n      },\n      {\n        path: 'groups/:id',\n        data: {\n          icon: 'insert_invitation',\n          dialog: true,\n        },\n        children: [\n          { path: '', redirectTo: 'profiles', pathMatch: 'full' },\n          {\n            path: 'profiles',\n            component: MsList,\n            data: {\n              icon: 'groups',\n              reuse: true,\n              // icon: 'list',\n              actions: [\n                {\n                  component: ProfileStatusComponent,\n                  type: 'edit',\n                },\n              ],\n            },\n          },\n          {\n            path: 'events',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'local_activity',\n              actions: [\n                {\n                  // component: EventFormComponent,\n                  component: QrcodeComponent,\n                  type: 'verify',\n                },\n                {\n                  // component: EventFormComponent,\n                  component: QrcodeComponent,\n                  type: 'code',\n                },\n              ],\n              multiple: true,\n              event: true, //temporary\n              animation: 'One',\n            },\n          },\n          {\n            path: 'events/:id',\n            data: {\n              icon: 'local_activity',\n              dialog: true,\n            },\n            children: [\n              { path: '', redirectTo: 'items', pathMatch: 'full' },\n              {\n                path: 'items',\n                component: MsList,\n                data: {\n                  reuse: true,\n                  actions: [\n                    {\n                      component: EventFormComponent,\n                      type: 'add',\n                      icon: 'add',\n                    },\n                    {\n                      component: EventFormComponent,\n                      type: 'edit',\n                    },\n                  ],\n                  event: true, //temporary\n                  animation: 'One1',\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: 'promotions',\n    component: MsList,\n    data: {\n      reuse: true,\n      icon: 'campaign',\n      actions: [\n        {\n          component: CampaignFormComponent,\n          type: 'add',\n          icon: 'add',\n        },\n        {\n          component: CampaignFormComponent,\n          type: 'edit',\n        },\n      ],\n    },\n    children: [\n      {\n        path: 'templates/:id',\n        data: {\n          icon: 'insert_invitation',\n          dialog: true,\n        },\n        children: [\n          { path: '', redirectTo: 'items', pathMatch: 'full' },\n          {\n            path: 'items',\n            component: MsList,\n            data: {\n              actions: [\n                {\n                  component: EventFormComponent,\n                  type: 'add',\n                  icon: 'add',\n                },\n                {\n                  component: EventFormComponent,\n                  type: 'edit',\n                },\n              ],\n              event: true, //temporary\n            },\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: 'promotions/:id',\n    data: {\n      icon: 'insert_invitation',\n      dialog: true,\n    },\n    children: [\n      { path: '', redirectTo: 'events', pathMatch: 'full' },\n      {\n        path: 'events',\n        component: MsList,\n        data: {\n          reuse: true,\n          icon: 'list',\n          event: true, //temporary\n          animation: 'One1',\n          actions: [\n            {\n              component: EventFormComponent,\n              type: 'edit',\n            },\n          ],\n        },\n      },\n      {\n        path: 'events/:id',\n        data: {\n          icon: 'insert_invitation',\n          dialog: true,\n        },\n        children: [\n          { path: '', redirectTo: 'items', pathMatch: 'full' },\n          {\n            path: 'items',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'list',\n              actions: [\n                {\n                  component: EventFormComponent,\n                  type: 'add',\n                  icon: 'add',\n                },\n                {\n                  component: EventFormComponent,\n                  type: 'edit',\n                },\n              ],\n              event: true, //temporary\n              animation: 'One1',\n            },\n          },\n          {\n            path: 'members',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'groups',\n              animation: 'One',\n              actions: [\n                {\n                  component: BasketComponent,\n                  type: 'add',\n                  icon: 'add',\n                  multiple: true,\n                  // only profiles - members url part will be replaced by profiles\n                  url: '/games/rate_met', // backend call - not rate_met, filter out already added members\n                },\n              ],\n            },\n            children: [\n              { path: '', redirectTo: 'schools', pathMatch: 'full' },\n              {\n                path: 'schools',\n                component: MsList,\n                data: {\n                  reuse: true,\n                  animation: 'One1',\n                },\n              },\n            ],\n          },\n          {\n            path: 'feedbacks',\n            component: MsList,\n            data: {\n              reuse: true,\n              icon: 'feedback_ext',\n              actions: [\n                {\n                  component: FeedbackFormComponent,\n                  type: 'add',\n                  icon: 'add',\n                },\n                {\n                  component: FeedbackFormComponent,\n                  type: 'edit',\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        path: 'members',\n        component: MsList,\n        data: {\n          animation: 'One',\n          reuse: true,\n          icon: 'groups',\n        },\n        children: [\n          { path: '', redirectTo: 'schools', pathMatch: 'full' },\n          {\n            path: 'schools',\n            component: MsList,\n            data: {\n              reuse: true,\n              animation: 'One1',\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BusinessRoutingModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { HttpService } from 'src/app/services/http.service';\nimport { EditorComponent } from '../../editor/editor.component';\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n})\nexport class CarFormComponent implements OnInit {\n  formGroup: FormGroup;\n\n  images: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<CarFormComponent>,\n    public dialog: MatDialog,\n    private httpService: HttpService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.data = data.value ? data.value : { images: [] };\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        regNum: [this.data.regNum, Validators.required],\n        make: [this.data.make, Validators.required],\n        model: [this.data.model, Validators.required],\n        color: [this.data.color, Validators.required],\n        year: [\n          this.data.year,\n          [Validators.required, Validators.pattern('^[0-9]{4}$')],\n        ],\n        capacity: [\n          this.data.capacity,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n      }),\n      images: [\n        [...this.data.images],\n        [Validators.required, Validators.minLength(1)],\n      ],\n    });\n\n    this.images = (this.data.images as Array<string>).map(\n      (image) =>\n        location.origin + '/backend' + this.url + '/images/' + image['name']\n    );\n  }\n\n  numSequence(n: number): Array<number> {\n    return Array(n);\n  }\n\n  openDialog(idx) {\n    const dialogRef = this.dialog.open(EditorComponent, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: '100%',\n      width: '100%',\n      data: {\n        idx,\n        src:\n          this.images[idx] !== undefined\n            ? this.images[idx].split('?')[0] + '_orig'\n            : this.images[idx],\n        value: this.formGroup.controls['images'].value[idx],\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(result);\n      if (result !== undefined) {\n        const images = this.formGroup.controls['images'].value;\n        images[result.idx] = { name: result.id, mtx: result.mtx };\n        this.formGroup.controls['images'].setValue(images);\n        this.data.images[result.idx] = images[result.idx];\n\n        this.images = (this.data.images as Array<string>).map(\n          (image) =>\n            location.origin +\n            '/backend' +\n            this.url +\n            '/images/' +\n            image['name'] +\n            '?' +\n            Date.now()\n        );\n      }\n    });\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      let raw = this.formGroup.getRawValue();\n      raw.data.images = raw.images;\n      this.httpService.save(this.url, raw.data).subscribe({\n        next: (value) => {\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Personal data</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-label>Registration number</mat-label>\n          <input\n            matInput\n            [formControlName]=\"'regNum'\"\n            placeholder=\"e.g. SA-335CO\"\n          />\n          <mat-error *ngIf=\"formGroup.controls.data.get('regNum').invalid\"\n            >Registration Number is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Make</mat-label>\n          <input matInput [formControlName]=\"'make'\" placeholder=\"e.g. Ford\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('make').invalid\"\n            >Make is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Model</mat-label>\n          <input\n            matInput\n            [formControlName]=\"'model'\"\n            placeholder=\"e.g. Focus\"\n          />\n          <mat-error *ngIf=\"formGroup.controls.data.get('model').invalid\"\n            >Model is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Color</mat-label>\n          <input matInput [formControlName]=\"'color'\" placeholder=\"e.g. blue\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('color').invalid\"\n            >Color is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Year</mat-label>\n          <input\n            matInput\n            [formControlName]=\"'year'\"\n            placeholder=\"e.g. 1992\"\n            maxlength=\"4\"\n          />\n          <mat-error *ngIf=\"formGroup.controls.data.get('year').invalid\"\n            >Year is required!</mat-error\n          >\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Capacity</mat-label>\n          <input matInput [formControlName]=\"'capacity'\" maxlength=\"4\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('capacity').invalid\"\n            >Capacity is required!</mat-error\n          >\n        </mat-form-field>\n      </mat-expansion-panel>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.images.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Images</mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <mat-card\n          matRipple\n          default\n          *ngFor=\"let n of numSequence(1); let i = index\"\n          (click)=\"openDialog(i)\"\n        >\n          <img *ngIf=\"images.length > i\" mat-card-image [src]=\"images[i]\" />\n        </mat-card>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\nimport { DataService } from 'src/app/services/data.service';\nimport { HttpService } from 'src/app/services/http.service';\n\nconst DESC_MIN = 10;\nconst DESC_MAX = 160;\n@Component({\n  selector: 'app-profule-status',\n  templateUrl: './profile-status.component.html',\n})\nexport class ProfileStatusComponent implements OnInit {\n  formGroup: FormGroup;\n\n  roles: any;\n  statuses: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<ProfileStatusComponent>,\n    public dialog: MatDialog,\n    private httpService: HttpService,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.roles = this.dataService.roles;\n    this.statuses = this.dataService.profileStatuses;\n\n    this.data = data.value ? data.value : {};\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        role: [this.data.role, Validators.required],\n        status: [this.data.status, Validators.required],\n      }),\n    });\n  }\n\n  numSequence(n: number): Array<number> {\n    return Array(n);\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      const raw = this.formGroup.getRawValue();\n      this.httpService.save(this.url, raw.data).subscribe({\n        next: (value) => {\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Info</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-label>Role</mat-label>\n          <mat-select [formControlName]=\"'role'\">\n            <mat-option *ngFor=\"let role of roles\" [value]=\"role.value\">\n              {{ role.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Status</mat-label>\n          <mat-select [formControlName]=\"'status'\">\n            <mat-option *ngFor=\"let status of statuses\" [value]=\"status.value\">\n              {{ status.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n})\nexport class EventComponent implements OnInit {\n  constructor(public dialogRef: MatDialogRef<EventComponent>) {}\n\n  ngOnInit(): void {}\n\n  onClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  Event\n  <button mat-icon-button class=\"mat-close\" (click)=\"onClick()\">\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n","import { HttpParams } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { HttpService } from 'src/app/services/http.service';\nimport { DataService } from '../../../services/data.service';\n\n@Component({\n  selector: 'app-reward',\n  templateUrl: './reward.component.html',\n})\nexport class RewardComponent implements OnInit {\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  rewards: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<RewardComponent>,\n    public dialog: MatDialog,\n    private dataService: DataService,\n    private httpService: HttpService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    const params = new HttpParams();\n\n    this.httpService.get(this.url + '/rewards', params).subscribe({\n      next: (result) => {\n        this.rewards = result;\n      },\n      error: (error) => {\n        this.progress.mode = 'determine';\n        this.progress.color = 'warn';\n      },\n      complete: () => {\n        console.log('complete');\n      },\n    });\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div>\n  <fieldset *ngFor=\"let reward of rewards\">\n    <legend>{{reward.name}}</legend>\n    <b>People invited:</b> {{reward.cnt}}\n  </fieldset>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { DataService } from 'src/app/services/data.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { EditorComponent } from '../../editor/editor.component';\n\nconst DESC_MIN = 10;\nconst DESC_MAX = 160;\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n})\nexport class GroupFormComponent implements OnInit {\n  formGroup: FormGroup;\n\n  images: any;\n\n  types: any;\n  visibilities: any;\n\n  progress: any = { mode: 'determine', value: 100, color: 'primary' };\n  private url: any;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<GroupFormComponent>,\n    public dialog: MatDialog,\n    private httpService: HttpService,\n    private dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n\n    this.types = this.dataService.groupTypes;\n    this.visibilities = this.dataService.groupVisibilities;\n\n    this.data = data.value ? data.value : { images: [] };\n    this.url = data.url;\n  }\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      data: this.fb.group({\n        type: [this.data.type, Validators.required],\n        visibility: [this.data.visibility, Validators.required],\n        name: [this.data.name, Validators.required],\n        desc: [\n          this.data.desc !== undefined ? this.data.desc : '',\n          [\n            Validators.required,\n            Validators.minLength(DESC_MIN),\n            Validators.maxLength(DESC_MAX),\n          ],\n        ],\n      }),\n      images: [\n        [...this.data.images],\n        [Validators.required, Validators.minLength(1)],\n      ],\n    });\n\n    this.images = (this.data.images as Array<string>).map(\n      (image) =>\n        location.origin + '/backend' + this.url + '/images/' + image['name']\n    );\n  }\n\n  numSequence(n: number): Array<number> {\n    return Array(n);\n  }\n\n  openDialog(idx) {\n    const dialogRef = this.dialog.open(EditorComponent, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: '100%',\n      width: '100%',\n      data: {\n        idx,\n        src:\n          this.images[idx] !== undefined\n            ? this.images[idx].split('?')[0] + '_orig'\n            : this.images[idx],\n        value: this.formGroup.controls['images'].value[idx],\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result !== undefined) {\n        const images = this.formGroup.controls['images'].value;\n        images[result.idx] = { name: result.id, mtx: result.mtx };\n        this.formGroup.controls['images'].setValue(images);\n        this.data.images[result.idx] = images[result.idx];\n\n        this.images = (this.data.images as Array<string>).map(\n          (image) =>\n            location.origin +\n            '/backend' +\n            this.url +\n            '/images/' +\n            image['name'] +\n            '?' +\n            Date.now()\n        );\n      }\n    });\n  }\n\n  onClick(): void {\n    if (this.formGroup.valid) {\n      this.progress.mode = 'indeterminate';\n\n      let raw = this.formGroup.getRawValue();\n      raw.data.images = raw.images;\n      this.httpService.save(this.url, raw.data).subscribe({\n        next: (value) => {\n          this.dialogRef.close(value);\n        },\n        error: (error) => {\n          this.progress.mode = 'determine';\n          this.progress.color = 'warn';\n        },\n        complete: () => {\n          this.progress.mode = 'determine';\n        },\n      });\n    }\n  }\n\n  back(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>\n  <button mat-icon-button class=\"mat-cancel\" (click)=\"back()\">\n    <mat-icon>arrow_backward</mat-icon>\n  </button>\n  &nbsp;\n  <button\n    mat-icon-button\n    class=\"mat-close\"\n    [style.background-color]=\"formGroup.valid ? 'yellowgreen' : '#f44336'\"\n    (click)=\"onClick()\"\n  >\n    <mat-icon>done</mat-icon>\n  </button>\n</h1>\n<mat-progress-bar\n  [mode]=\"progress.mode\"\n  [value]=\"progress.value\"\n  [color]=\"progress.color\"\n></mat-progress-bar>\n<div mat-dialog-content class=\"mat-form\">\n  <form default [formGroup]=\"formGroup\">\n    <mat-accordion>\n      <mat-expansion-panel formGroupName=\"data\">\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.data.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Group data</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <mat-label>Type</mat-label>\n          <mat-select [formControlName]=\"'type'\">\n            <mat-option *ngFor=\"let type of types\" [value]=\"type.value\">\n              {{ type.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Visibility</mat-label>\n          <mat-select [formControlName]=\"'visibility'\">\n            <mat-option *ngFor=\"let visibility of visibilities\" [value]=\"visibility.value\">\n              {{ visibility.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Enter name</mat-label>\n          <input matInput [formControlName]=\"'name'\" />\n          <mat-error *ngIf=\"formGroup.controls.data.get('name').invalid\"\n            >Name is required!</mat-error\n          >\n        </mat-form-field>\n        <fieldset>\n          <legend>Description (min. 10, max. 160)</legend>\n          <div legend-right>\n            {{ formGroup.controls.data.get('desc').value.length }}\n          </div>\n          <mat-form-field>\n            <textarea\n              matInput\n              [formControlName]=\"'desc'\"\n              rows=\"5\"\n              maxlength=\"160\"\n            ></textarea>\n            <mat-error *ngIf=\"formGroup.controls.data.get('desc').invalid\"\n              >Description is required!</mat-error\n            >\n          </mat-form-field>\n        </fieldset>\n      </mat-expansion-panel>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header\n          [style.background-color]=\"\n            formGroup.controls.images.valid ? 'yellowgreen' : '#f44336'\n          \"\n        >\n          <mat-panel-title>Images</mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <mat-card\n          matRipple\n          default\n          *ngFor=\"let n of numSequence(1); let i = index\"\n          (click)=\"openDialog(i)\"\n        >\n          <img *ngIf=\"images.length > i\" mat-card-image [src]=\"images[i]\" />\n        </mat-card>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </form>\n</div>\n"],"sourceRoot":"webpack:///"}