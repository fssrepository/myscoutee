version: "3.3"

networks:
  myscoutee:
    driver: bridge

services:
  # certbot:
  #   image: ${CERT_BOT}
  #   container_name: certbot
  #   hostname: certbot
  #   networks:
  #     - myscoutee
  #   environment:
  #     - RENEWAL_INTERVAL=12h
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep $${RENEWAL_INTERVAL} & wait $${!}; done;'"
  #   volumes:
  #    - ./data/certbot/conf:/etc/letsencrypt
  #    - ./data/certbot/www:/var/www/certbot
  #   depends_on:
  #     - nginx
  nginx:
    #build:
    #   context: docker/images/nginx
    container_name: nginx
    hostname: nginx
    image: ${NGINX_IMAGE}
    #environment:
    #  WAIT_FOR: profilemanagement:8080
    ports:
      - 80:80
      - 443:443
      - 27017-27019:27017-27019
      - 5005:5005
      - 1883:1883
      - 8883:8883
    volumes:
      - ./docker/conf/nginx/conf/http:/etc/nginx/conf.d/
      - ./docker/conf/nginx/conf/stream:/etc/nginx/stream_conf.d/
      - ./docker/conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/conf/nginx/app/myscoutee:/usr/share/nginx/html
      - ./docker/conf/nginx/keys:/etc/nginx/keys
      #- ./docker/scripts:/scripts
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      #- "/etc/timezone:/etc/timezone:ro"
      #- "/etc/localtime:/etc/localtime:ro"
    networks:
      - myscoutee
    depends_on:
      - mongodb
      - mqtt
      - profilemanagement
      #- certbot
    #command: ["/scripts/wait-for-it.sh", "-t", "0", "profilemanagement:8080", "--", "nginx", "-g", "daemon off;"]
  mongodb:
    image: ${MONGO_IMAGE}
    container_name: mongodb
    hostname: mongodb
    #restart: always
    #entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
    environment:
      MONGO_INITDB_DATABASE: myscoutee_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpw
    volumes:
      - ./docker/conf/mongodb/:/docker-entrypoint-initdb.d
      - ./data/mongodb/data:/data/db
      - ./docker/scripts:/scripts
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
    networks:
      - myscoutee
    #ports:
    #  - 27017-27019:27017-27019
  mqtt:
    image: ${MOSQUITTO_IMAGE_EXT_AUTH}
    container_name: mqtt
    volumes:
      - ./docker/conf/mosquitto:/mosquitto/config
      - ./data/mosquitto/data:/mosquitto/data:rw
      - ./data/mosquitto/log:/mosquitto/log:rw
    networks:
      - myscoutee
  profilemanagement:
    image: ${MYSCOUTEE_IMAGE}
    build:
       context: projects/profile
    container_name: myscoutee
    hostname: myscoutee
    environment:
      MONGODB_HOST: "mongodb"
      MONGODB_USERNAME: "guest"
      MONGODB_PASSWORD: "guest"
      ADMIN_USER: "myscoutee@gmail.com"
      JAVA_TOOL_OPTIONS: >
              -Xdebug
              -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    volumes:
      - ./data/profile/img:/tmp/img
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
    networks:
      - myscoutee
    depends_on:
      - mongodb
      - mqtt
