[
    "{\n" +
            "        \$geoNear :\n" +
            "        {\n" +
            "            near :\n" +
            "            ?1,\n" +
            "            spherical     : true,\n" +
            "            minDistance   : :#{#offset[0]},\n" +
            "            distanceField : 'distance',\n" +
            "            distanceMultiplier: 0.001,\n" +
            "            query         : {'_id': { \$nin: [?0] }, 'gender': ?4, 'group': ?5 }\n" +
            "        }\n" +
            "}",

    "{\n" +
            "        \$lookup:\n" +
            "        {\n" +
            "            from: 'likes',\n" +
            "            let: { p_id: '\$_id' },\n" +
            "            pipeline: [\n" +
            "                {\n" +
            "                    \$match: {\n" +
            "                        \$expr: \n" +
            "                        {\n" +
            "                            \$or: [\n" +
            "                                {\n" +
            "                                    \$and: [\n" +
            "                                        { \$eq: ['\$from.\$id', '\$\$p_id'] },\n" +
            "                                        { \$eq: ['\$to.\$id', ?0 ] },\n" +
            "                                    ]\n" +
            "                                },\n" +
            "                                {\n" +
            "                                    \$and: [\n" +
            "                                        { \$eq: ['\$to.\$id', '\$\$p_id'] },\n" +
            "                                        { \$eq: ['\$from.\$id', ?0 ] },\n" +
            "                                    ]\n" +
            "                                }\n" +
            "                            ]\n" +
            "                        },\n" +
            "                    }\n" +
            "                },\n" +
            "                {\n" +
            "                    \$project: {\n" +
            "                        'distance': {\n" +
            "                            \$avg: '\$distance'\n" +
            "                        },\n" +
            "                        'type': {\n" +
            "                            \$avg: {\n" +
            "                                \$switch: {\n" +
            "                                    branches: [\n" +
            "                                        { \n" +
            "                                            case: { \n" +
            "                                                \$and: [\n" +
            "                                                    { \$eq: ['\$to.\$id', ?0 ] },\n" +
            "                                                    { \$eq: ['\$double', false] },\n" +
            "                                                ]\n" +
            "                                            },\n" +
            "                                            then: 2\n" +
            "                                        },\n" +
            "                                        { \n" +
            "                                            case: { \n" +
            "                                                \$and: [\n" +
            "                                                    { \$eq: ['\$from.\$id', ?0 ] },\n" +
            "                                                    { \$eq: ['\$double', false] },\n" +
            "                                                ]\n" +
            "                                            },\n" +
            "                                            then: 1\n" +
            "                                        }\n" +
            "                                    ],\n" +
            "                                    default: 0\n" +
            "                                }\n" +
            "                            }\n" +
            "                        },\n" +
            "                        'createdDate': {\n" +
            "                            \$max: '\$createdDate'\n" +
            "                        },\n" +
            "                        data: '\$\$ROOT'\n" +
            "                    }\n" +
            "                },\n" +
            "            ],\n" +
            "            as: 'likes',\n" +
            "        }\n" +
            "    }",

    "{\n" +
            "        \$unwind: { path: '\$likes', preserveNullAndEmptyArrays: true }\n" +
            "    }",
    "{\n" +
            "        \$match: {\n" +
            "            \$expr: \n" +
            "            {\n" +
            "                        \$and: [\n" +
            "                            {\$eq: [ '\$status', 'A' ] },\n" +
            "                            {\$eq: [ {\$ifNull: ['\$likes.type', 0]}, :#{#type} ]},\n" +
            "                            {\$gte: [{\$ifNull: [ '\$likes.distance', 0]}, :#{#offset[1]}] },\n" +
            "                        ]\n" +
            "            },\n" +
            "        }\n" +
            "    }",

    "{\n" +
            "        \$group: {\n" +
            "            '_id': '\$_id',\n" +
            "            'likes': {\n" +
            "                \$avg: '\$likes.distance'\n" +
            "            },\n" +
            "            'type': {\n" +
            "                \$avg: '\$likes.type'\n" +
            "            },\n" +
            "            'rate': {\n" +
            "                \$avg: {\n" +
            "                    \$switch: {\n" +
            "                        branches: [\n" +
            "                            { \n" +
            "                                case: { \n" +
            "                                    \$eq: ['\$likes.type', 1 ] \n" +
            "                                },\n" +
            "                                then: '\$likes.data.rate'\n" +
            "                            }\n" +
            "                        ],\n" +
            "                        default: 0\n" +
            "                    }\n" +
            "                }\n" +
            "            },\n" +
            "            'groupKey': {\n" +
            "                \$first : {\$multiply: [{\$floor : [{\$divide : ['\$distance', ?3]}]}, ?3]}\n" +
            "            },\n" +
            "            'distance': {\n" +
            "                \$first : '\$distance'\n" +
            "            },\n" +
            "        }\n" +
            "    }",

    "{\n" +
            "        \$lookup:\n" +
            "        {\n" +
            "            from: 'events',\n" +
            "            let: { 'p_id': '\$_id' },\n" +
            "            pipeline: [\n" +
            "                {\n" +
            "                    \$match: {\n" +
            "                        \$expr: {\n" +
            "                            \$and: [\n" +
            "                                {\$in: ['\$\$p_id','\$info.members.profile.\$id']},\n" +
            "                                {\$not: {\$in: [?0, '\$info.members.profile.\$id']} },\n" +
            "                                {\$gt: [{\$ifNull: [ '\$createdDate', ISODate()]}, { \$toDate: :#{#offset[4]} }]}\n" +
            "                            ]\n" +
            "                        }\n" +
            "                    }\n" +
            "                }\n" +
            "            ],\n" +
            "            as: 'events',\n" +
            "        }\n" +
            "}",

    // unwind members from here, not events
    "{\n" +
            "        \$unwind: { path: '\$events' }\n" +
            "    }",

    "{\n" +
            "        \$unwind: { path: '\$events.info.members' }\n" +
            "    }",

    "{\n" +
            "        \$group: {\n" +
            "            '_id': '\$events.info.members.profile.\$id',\n" +
            "            'rate': {\n" +
            "                \$avg: '\$events.rate'\n" +
            "            },\n" +
            "            'createdDate': {\n" +
            "                \$min: '\$createdDate'\n" +
            "            },\n" +
            "            'groupKey': {\n" +
            "                \$min: '\$groupKey'\n" +
            "            },\n" +
            "            'likes': {\n" +
            "                \$avg: '\$likes'\n" +
            "            },\n" +
            "            'distance': {\n" +
            "                \$min: '\$distance'\n" +
            "            },\n" +
            "            data: { '\$first': '\$events.info.members.profile' },\n" +
            "        }\n" +
            "}",

    "{\n" +
            "        \$match: {\n" +
            "            \$expr: {\n" +
            "                \$and: [\n" +
            "                    {\$gte: [{\$ifNull: [ '\$rate', 0]}, :#{#offset[2]} ]},\n" +
            "                    {\$gte: [{\$ifNull: ['\$distance', 0]}, :#{#offset[3]} ]},\n" +
            "                ]\n" +
            "            }\n" +
            "        }\n" +
            "}",

    "{\n" +
            "        \$sort: {\n" +
            "            'groupKey': 1, 'likes': -1, 'rate': -1, 'distance': 1\n" +
            "        }\n" +
            "}",

    "{ \$limit : ?2 }",

    "{\n" +
            "        \$replaceRoot: { \n" +
            "            'newRoot': { \n" +
            "                \$mergeObjects: [{'profile': '\$data'}, { groupKey: '\$groupKey', offset: ['\$groupKey', {\$ifNull: [ '\$likes', 0]}, '\$rate', '\$distance', '\$createdDate'] } ]\n" +
            "            }\n" +
            "        }\n" +
            "    }"
]